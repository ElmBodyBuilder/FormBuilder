var _user$project$FormBuilder_FieldBuilder$sendUpdateMsg = F3(
	function (type_, field, variable) {
		return type_(
			field(variable));
	});
var _user$project$FormBuilder_FieldBuilder$compose = function (modifiers) {
	return A3(
		_elm_lang$core$List$foldr,
		F2(
			function (x, y) {
				return function (_p0) {
					return x(
						y(_p0));
				};
			}),
		_elm_lang$core$Basics$identity,
		modifiers);
};
var _user$project$FormBuilder_FieldBuilder$mandatoryText = function (mandatory) {
	return mandatory ? ' * ' : '';
};
var _user$project$FormBuilder_FieldBuilder$labelText = F2(
	function (label, mandatory) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			label,
			A2(
				_elm_lang$core$Basics_ops['++'],
				_user$project$FormBuilder_FieldBuilder$mandatoryText(mandatory),
				' :'));
	});
var _user$project$FormBuilder_FieldBuilder$labelField = F3(
	function (text, isHidden, mandatory) {
		var lbl = isHidden ? _elm_lang$core$Maybe$Nothing : text;
		var _p1 = lbl;
		if (_p1.ctor === 'Just') {
			return A2(
				_elm_lang$html$Html$label,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(_user$project$FormBuilder_FieldBuilder$labelText, _p1._0, mandatory)),
					_1: {ctor: '[]'}
				});
		} else {
			return _elm_lang$html$Html$text('');
		}
	});
var _user$project$FormBuilder_FieldBuilder$option = F2(
	function (selected, current) {
		var valueSelected = A2(
			_elm_lang$core$Result$withDefault,
			0,
			_elm_lang$core$String$toInt(selected));
		var valueInsideList = _elm_lang$core$Tuple$second(current);
		var isSameValue = _elm_lang$core$Native_Utils.eq(valueInsideList, valueSelected);
		return A2(
			_elm_lang$html$Html$option,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$value(
					_elm_lang$core$Basics$toString(valueInsideList)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$selected(isSameValue),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Tuple$first(current)),
				_1: {ctor: '[]'}
			});
	});
var _user$project$FormBuilder_FieldBuilder$selectField = F3(
	function (name, selected, options) {
		return A2(
			_elm_lang$html$Html$select,
			{
				ctor: '::',
				_0: name,
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				_user$project$FormBuilder_FieldBuilder$option(selected),
				options));
	});
var _user$project$FormBuilder_FieldBuilder$inputTypeToString = function (inputType) {
	var _p2 = inputType;
	switch (_p2.ctor) {
		case 'Hidden':
			return 'hidden';
		case 'File':
			return 'file';
		default:
			return 'text';
	}
};
var _user$project$FormBuilder_FieldBuilder$onChange = F2(
	function (msg, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				onChange: _elm_lang$core$Maybe$Just(msg)
			});
	});
var _user$project$FormBuilder_FieldBuilder$onBlur = F2(
	function (event, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				onBlur: _elm_lang$core$Maybe$Just(event)
			});
	});
var _user$project$FormBuilder_FieldBuilder$onFocus = F2(
	function (event, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				onFocus: _elm_lang$core$Maybe$Just(event)
			});
	});
var _user$project$FormBuilder_FieldBuilder$onInput = F2(
	function (event, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				event: _elm_lang$core$Maybe$Just(event)
			});
	});
var _user$project$FormBuilder_FieldBuilder$onStandardFieldChange = function (type_) {
	return function (_p3) {
		return _user$project$FormBuilder_FieldBuilder$onInput(
			A2(_user$project$FormBuilder_FieldBuilder$sendUpdateMsg, type_, _p3));
	};
};
var _user$project$FormBuilder_FieldBuilder$options = F2(
	function (options, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				options: _elm_lang$core$Maybe$Just(options)
			});
	});
var _user$project$FormBuilder_FieldBuilder$hidden = function (formAttributes) {
	return _elm_lang$core$Native_Utils.update(
		formAttributes,
		{
			hidden: _elm_lang$core$Maybe$Just(true)
		});
};
var _user$project$FormBuilder_FieldBuilder$placeholder = F2(
	function (value, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				placeholder: _elm_lang$core$Maybe$Just(value)
			});
	});
var _user$project$FormBuilder_FieldBuilder$mandatory = function (formAttributes) {
	return _elm_lang$core$Native_Utils.update(
		formAttributes,
		{
			mandatory: _elm_lang$core$Maybe$Just(true)
		});
};
var _user$project$FormBuilder_FieldBuilder$type_ = F2(
	function (value, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				type_: _elm_lang$core$Maybe$Just(value)
			});
	});
var _user$project$FormBuilder_FieldBuilder$id = F2(
	function (id, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				id: _elm_lang$core$Maybe$Just(id)
			});
	});
var _user$project$FormBuilder_FieldBuilder$value = F2(
	function (v, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				value: _elm_lang$core$Maybe$Just(v)
			});
	});
var _user$project$FormBuilder_FieldBuilder$noBottomPadding = function (formAttributes) {
	return _elm_lang$core$Native_Utils.update(
		formAttributes,
		{
			noBottomPadding: _elm_lang$core$Maybe$Just(true)
		});
};
var _user$project$FormBuilder_FieldBuilder$label = F2(
	function (l, formAttributes) {
		return _elm_lang$core$Native_Utils.update(
			formAttributes,
			{
				label: _elm_lang$core$Maybe$Just(l)
			});
	});
var _user$project$FormBuilder_FieldBuilder$blank = function (str) {
	return _elm_lang$core$Native_Utils.eq(str, '');
};
var _user$project$FormBuilder_FieldBuilder$notBlank = function (str) {
	return !_user$project$FormBuilder_FieldBuilder$blank(str);
};
var _user$project$FormBuilder_FieldBuilder$formField = F2(
	function (attributeName, val) {
		return A2(
			_elm_lang$html$Html$input,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('hidden'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$name(attributeName),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(val),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$FormBuilder_FieldBuilder$inputName = F2(
	function (objectName, attributeName) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			objectName,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'[',
				A2(_elm_lang$core$Basics_ops['++'], attributeName, ']')));
	});
var _user$project$FormBuilder_FieldBuilder$hiddenObjectField = F3(
	function (objectName, attributeName, attributes) {
		return A2(
			_elm_lang$html$Html$input,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('hidden'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$name(
						A2(_user$project$FormBuilder_FieldBuilder$inputName, objectName, attributeName)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(
							A2(_elm_lang$core$Maybe$withDefault, '', attributes.value)),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$FormBuilder_FieldBuilder$selectOption = function (_p4) {
	var _p5 = _p4;
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(
				_elm_lang$core$Basics$toString(_p5.id)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(_p5.name),
			_1: {ctor: '[]'}
		});
};
var _user$project$FormBuilder_FieldBuilder$defaultFieldAttributes = {value: _elm_lang$core$Maybe$Nothing, id: _elm_lang$core$Maybe$Nothing, type_: _elm_lang$core$Maybe$Nothing, label: _elm_lang$core$Maybe$Nothing, placeholder: _elm_lang$core$Maybe$Nothing, mandatory: _elm_lang$core$Maybe$Nothing, hidden: _elm_lang$core$Maybe$Nothing, options: _elm_lang$core$Maybe$Nothing, event: _elm_lang$core$Maybe$Nothing, noBottomPadding: _elm_lang$core$Maybe$Nothing, onFocus: _elm_lang$core$Maybe$Nothing, onBlur: _elm_lang$core$Maybe$Nothing, onChange: _elm_lang$core$Maybe$Nothing};
var _user$project$FormBuilder_FieldBuilder$File = {ctor: 'File'};
var _user$project$FormBuilder_FieldBuilder$inputField = F3(
	function (inputType, attrs, val) {
		return A2(
			_elm_lang$html$Html$input,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_(
					_user$project$FormBuilder_FieldBuilder$inputTypeToString(inputType)),
				_1: _elm_lang$core$Native_Utils.eq(inputType, _user$project$FormBuilder_FieldBuilder$File) ? attrs : {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value(val),
					_1: attrs
				}
			},
			{ctor: '[]'});
	});
var _user$project$FormBuilder_FieldBuilder$Text = {ctor: 'Text'};
var _user$project$FormBuilder_FieldBuilder$TextArea = {ctor: 'TextArea'};
var _user$project$FormBuilder_FieldBuilder$Hidden = {ctor: 'Hidden'};
var _user$project$FormBuilder_FieldBuilder$genericInputField = F6(
	function (objectName, fieldName, attributes, isMandatory, isHidden, view) {
		var name = _elm_lang$html$Html_Attributes$name(
			A2(_user$project$FormBuilder_FieldBuilder$inputName, objectName, fieldName));
		var id = _elm_lang$html$Html_Attributes$id(
			A2(_elm_lang$core$Maybe$withDefault, '', attributes.id));
		var val = A2(_elm_lang$core$Maybe$withDefault, '', attributes.value);
		var attrs = {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$required(isMandatory),
			_1: {
				ctor: '::',
				_0: name,
				_1: {
					ctor: '::',
					_0: id,
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder(
							_elm_lang$core$Native_Utils.eq(val, '') ? A2(_elm_lang$core$Maybe$withDefault, '', attributes.placeholder) : ''),
						_1: {ctor: '[]'}
					}
				}
			}
		};
		var finalAttrs = _elm_lang$core$List$concat(
			{
				ctor: '::',
				_0: function () {
					var _p6 = attributes.event;
					if (_p6.ctor === 'Nothing') {
						return {ctor: '[]'};
					} else {
						return {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_p6._0),
							_1: {ctor: '[]'}
						};
					}
				}(),
				_1: {
					ctor: '::',
					_0: function () {
						var _p7 = attributes.onBlur;
						if (_p7.ctor === 'Nothing') {
							return {ctor: '[]'};
						} else {
							return {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onBlur(
									_p7._0(objectName)),
								_1: {ctor: '[]'}
							};
						}
					}(),
					_1: {
						ctor: '::',
						_0: function () {
							var _p8 = attributes.onFocus;
							if (_p8.ctor === 'Nothing') {
								return {ctor: '[]'};
							} else {
								return {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onFocus(
										_p8._0(objectName)),
									_1: {ctor: '[]'}
								};
							}
						}(),
						_1: {
							ctor: '::',
							_0: function () {
								var _p9 = attributes.onChange;
								if (_p9.ctor === 'Nothing') {
									return {ctor: '[]'};
								} else {
									return {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html_Events$on,
											'change',
											_elm_lang$core$Json_Decode$succeed(_p9._0)),
										_1: {ctor: '[]'}
									};
								}
							}(),
							_1: {
								ctor: '::',
								_0: attrs,
								_1: {ctor: '[]'}
							}
						}
					}
				}
			});
		var inputType = isHidden ? _user$project$FormBuilder_FieldBuilder$Hidden : A2(_elm_lang$core$Maybe$withDefault, _user$project$FormBuilder_FieldBuilder$Text, attributes.type_);
		var _p10 = view;
		if (_p10.ctor === 'Nothing') {
			var _p11 = attributes.options;
			if (_p11.ctor === 'Nothing') {
				var _p12 = inputType;
				if (_p12.ctor === 'TextArea') {
					return A2(
						_elm_lang$html$Html$textarea,
						finalAttrs,
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(val),
							_1: {ctor: '[]'}
						});
				} else {
					return A3(_user$project$FormBuilder_FieldBuilder$inputField, inputType, finalAttrs, val);
				}
			} else {
				return A3(_user$project$FormBuilder_FieldBuilder$selectField, name, val, _p11._0);
			}
		} else {
			return A4(_p10._0, attributes, finalAttrs, name, val);
		}
	});
var _user$project$FormBuilder_FieldBuilder$objectField = F5(
	function (objectName, default_attributes, view, fieldName, custom_modifiers) {
		var attributes = A2(_user$project$FormBuilder_FieldBuilder$compose, custom_modifiers, default_attributes);
		var isMandatory = A2(_elm_lang$core$Maybe$withDefault, false, attributes.mandatory);
		var isHidden = (isMandatory && _user$project$FormBuilder_FieldBuilder$blank(
			A2(_elm_lang$core$Maybe$withDefault, '', attributes.value))) ? false : A2(_elm_lang$core$Maybe$withDefault, false, attributes.hidden);
		var noBottomPadding = A2(_elm_lang$core$Maybe$withDefault, false, attributes.noBottomPadding);
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(
					(isHidden || noBottomPadding) ? '' : 'pb'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A3(_user$project$FormBuilder_FieldBuilder$labelField, attributes.label, isHidden, isMandatory),
				_1: {
					ctor: '::',
					_0: A6(_user$project$FormBuilder_FieldBuilder$genericInputField, objectName, fieldName, attributes, isMandatory, isHidden, view),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$FormBuilder_FieldBuilder$defaultInputField = F2(
	function (recordName, view) {
		return A3(_user$project$FormBuilder_FieldBuilder$objectField, recordName, _user$project$FormBuilder_FieldBuilder$defaultFieldAttributes, _elm_lang$core$Maybe$Nothing);
	});
var _user$project$FormBuilder_FieldBuilder$defaultInputHiddenField = F2(
	function (recordName, view) {
		return A3(
			_user$project$FormBuilder_FieldBuilder$objectField,
			recordName,
			_user$project$FormBuilder_FieldBuilder$hidden(_user$project$FormBuilder_FieldBuilder$defaultFieldAttributes),
			_elm_lang$core$Maybe$Nothing);
	});
